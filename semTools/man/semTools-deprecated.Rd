% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aa_semTools-deprecated.R, R/efa.R,
%   R/longInvariance.R, R/measurementInvariance.R, R/measurementInvarianceCat.R,
%   R/reliability.R, R/runMI-LRT.R, R/runMI-Wald.R, R/runMI-modification.R,
%   R/runMI-score.R, R/runMI.R
\name{semTools-deprecated}
\alias{semTools-deprecated}
\alias{efaUnrotate}
\alias{orthRotate}
\alias{oblqRotate}
\alias{funRotate}
\alias{longInvariance}
\alias{measurementInvariance}
\alias{measurementInvarianceCat}
\alias{reliability}
\alias{reliabilityL2}
\alias{lavTestLRT.mi}
\alias{lavTestWald.mi}
\alias{modindices.mi}
\alias{modificationIndices.mi}
\alias{modificationindices.mi}
\alias{lavTestScore.mi}
\alias{runMI}
\alias{lavaan.mi}
\alias{cfa.mi}
\alias{sem.mi}
\alias{growth.mi}
\alias{calculate.D2}
\title{Deprecated functions in package \pkg{semTools}.}
\usage{
efaUnrotate(data = NULL, nf, varList = NULL, start = TRUE, aux = NULL,
  ...)

orthRotate(object, method = "varimax", ...)

oblqRotate(object, method = "quartimin", ...)

funRotate(object, fun, ...)

longInvariance(model, varList, auto = "all", constrainAuto = FALSE,
  fixed.x = TRUE, std.lv = FALSE, group = NULL, group.equal = "",
  group.partial = "", strict = FALSE, warn = TRUE, debug = FALSE,
  quiet = FALSE, fit.measures = "default", baseline.model = NULL,
  method = "satorra.bentler.2001", ...)

measurementInvariance(..., std.lv = FALSE, strict = FALSE, quiet = FALSE,
  fit.measures = "default", baseline.model = NULL,
  method = "satorra.bentler.2001")

measurementInvarianceCat(..., std.lv = FALSE, strict = FALSE,
  quiet = FALSE, fit.measures = "default", baseline.model = NULL,
  method = "default")

reliability(object, what = c("alpha", "omega", "omega2", "omega3", "ave"),
  return.total = FALSE, dropSingle = TRUE, omit.factors = character(0),
  omit.indicators = character(0), omit.imps = c("no.conv", "no.se"))

reliabilityL2(object, secondFactor, omit.imps = c("no.conv", "no.se"))

lavTestLRT.mi(object, h1 = NULL, test = c("D3", "D2"),
  omit.imps = c("no.conv", "no.se"), asymptotic = FALSE,
  pool.robust = FALSE, ...)

lavTestWald.mi(object, constraints = NULL, test = c("D1", "D2"),
  asymptotic = FALSE, scale.W = !asymptotic, omit.imps = c("no.conv",
  "no.se"), verbose = FALSE, warn = TRUE)

modindices.mi(object, test = c("D2", "D1"), omit.imps = c("no.conv",
  "no.se"), standardized = TRUE, cov.std = TRUE,
  information = "expected", power = FALSE, delta = 0.1, alpha = 0.05,
  high.power = 0.75, sort. = FALSE, minimum.value = 0,
  maximum.number = nrow(LIST), na.remove = TRUE, op = NULL)

modificationIndices.mi(object, test = c("D2", "D1"),
  omit.imps = c("no.conv", "no.se"), standardized = TRUE, cov.std = TRUE,
  information = "expected", power = FALSE, delta = 0.1, alpha = 0.05,
  high.power = 0.75, sort. = FALSE, minimum.value = 0,
  maximum.number = nrow(LIST), na.remove = TRUE, op = NULL)

modificationindices.mi(object, test = c("D2", "D1"),
  omit.imps = c("no.conv", "no.se"), standardized = TRUE, cov.std = TRUE,
  information = "expected", power = FALSE, delta = 0.1, alpha = 0.05,
  high.power = 0.75, sort. = FALSE, minimum.value = 0,
  maximum.number = nrow(LIST), na.remove = TRUE, op = NULL)

lavTestScore.mi(object, add = NULL, release = NULL, test = c("D2", "D1"),
  scale.W = !asymptotic, omit.imps = c("no.conv", "no.se"),
  asymptotic = is.null(add), univariate = TRUE, cumulative = FALSE,
  epc = FALSE, standardized = epc, cov.std = epc, verbose = FALSE,
  warn = TRUE, information = "expected")

runMI(model, data, fun = "lavaan", ..., m, miArgs = list(),
  miPackage = "Amelia", seed = 12345)

lavaan.mi(model, data, ..., m, miArgs = list(), miPackage = "Amelia",
  seed = 12345)

cfa.mi(model, data, ..., m, miArgs = list(), miPackage = "Amelia",
  seed = 12345)

sem.mi(model, data, ..., m, miArgs = list(), miPackage = "Amelia",
  seed = 12345)

growth.mi(model, data, ..., m, miArgs = list(), miPackage = "Amelia",
  seed = 12345)

calculate.D2(w, DF = 0L, asymptotic = FALSE)
}
\description{
The functions listed below are deprecated and will be defunct
in the near future. When possible, alternative functions with similar
functionality are also mentioned. Help pages for deprecated functions are
available at \code{help("semTools-deprecated")}.
}
\section{Support functions for exploratory factor analysis in \code{lavaan}}{

The \code{efaUnrotate}, \code{orthRotate}, \code{oblqRotate}, and
\code{funRotate} functions will no longer be supported. These functions
allowed users to estimate EFA parameters with \code{lavaan}. Instead, users
can now directly use \code{lavaan}'s \code{\link[lavaan]{efa}()} function.
Exploratory SEM (ESEM) is also supported by lavaan using special operators
in \code{lavaan}'s \code{\link[lavaan]{model.syntax}}; see
\url{https://github.com/yrosseel/lavaan/issues/112} for details.
}

\section{Previous measurement-invariance functions}{

The \code{measurementInvariance}, \code{measurementInvarianceCat}, and
\code{longInvariance} functions will no longer be supported. Instead, use
the \code{\link[=measEq.syntax]{measEq.syntax()}} function, which is much more flexible and
supports a wider range of data (e.g., any mixture of \code{numeric} and
\code{ordered} indicators, any combination of multiple groups and repeated
measures, models fit to multiple imputations with \code{\link[lavaan.mi:lavaan.mi]{lavaan.mi::lavaan.mi()}}).
}

\section{Reliability}{

The original \code{reliability} function was suboptimally designed.
For example, AVE was returned, which is not a reliability index. Also,
alpha and several omega-type coefficients were returned, including the
original formula that was in appropriate for models with complex structure.
Some features could be controlled by the user for one but not both types of
index  For example, alpha for categorical indicators was returned on both
the observed and latent-response scales, but this was not an option for any
omega-type indices.  The omegas differed in terms of whether the observed or
model-implied covariance matrix was used in the denominator, but alpha was
only computed using the observed matrix.  These inconsistencies have been
resolved in the new \code{\link[=compRelSEM]{compRelSEM()}} function, which returns only
one reliability index (per factor, optionally total score) according to the
user's requested features, for which there is much more flexibility.
Average variance extracted is now available in a dedicated \code{\link[=AVE]{AVE()}}
function.
}

\section{Higher-Order Reliability}{

Originally, composite reliability of a single higher-order factor was
estimated in a separate function: \code{reliabilityL2}.  It is now available
for multiple higher-order factors in the same model, and from the same
\code{\link[=compRelSEM]{compRelSEM()}} function that estimates reliability for first-order
factors, using the \verb{higher=} argument to name higher-order factors in
the fitted model.
}

\section{\code{runMI()} and the \code{lavaan.mi} class functionality}{

The \code{runMI()} function and support for \code{lavaan.mi-class} objects became
such a large part of semTools that it made sense to move that functionality
to its own package.  The \pkg{lavaan.mi} package is now available for users
to fit \code{lavaan} models to their multiply imputed data.  The new package
already fixes many bugs and provides many new features that make the
semTools \code{OLDlavaan.mi-class} obsolete.  Please immediately discontinue
your dependence on \code{semTools::runMI()} amd transition to the new
\pkg{lavaan.mi} package, which also provides a more similar user interface
as the \pkg{lavaan} package provides for a single \verb{data=} set. The README
on \url{https://github.com/TDJorgensen/lavaan.mi} provides a list of analogous
functionality in \pkg{lavaan} and \pkg{lavaan.mi}, and the NEWS file
documents new features and other differences from the deprecated
\code{semTools::runMI()} functionality.
}

\keyword{internal}
