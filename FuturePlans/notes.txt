

--------------------------------------------
IDEAS FOR semTools::permuteMeasEq() FUNCTION
--------------------------------------------

MIMIC papers:
10.1080/00273170802620121
10.1177/0146621611405984

- add option nPermute = 0
	- set showProgress = FALSE
- check for data (instead of sample.cov)
- make getMIs public (new partialInvariance() function?)
	- add EPC?
	- add option for p.adjust
	- move summ.mgcfa parameter labeling here (useful in general)
- check AIC problem
- add estimate of Monte Carlo SE as guideline for choosing nPermute
  - borrow parcel-allocation method


- FIX PARALLEL OPTIONS (maybe just add a library() call)
	- consider redesigning the whole argument-passing strategy
  - use with(dots, expr) instead of assigning arguments to objects within scope
  - using lavaanList() should avoid all this complexity

- check for robust test statistic, use mi.scaled?
- anova() slot doesn't always match Δχ2 in permutation output because
  Δχ2 is scaled, but permutation takes difference between scaled Δχ2s

- add multivariate option to test items simultaneously across all groups?

- For configural invariance, add follow-up using largest group-contribution to χ2
	- no, it is contaminated when H0 is FALSE. Do pairwise comparisons instead.

- update MIMIC method, possibly sequential?
	(1) use constrained baseline to choose anchors (use MI/df ratio; Woods, 2009: 10.1177/0146621607314044)
	(2) use free baseline (with anchors) to test DIF

- create permuteOnce.long, summ.long, and getMIs.long functions.
	- multigroup approach using Deng & Yuan correction?  10.1080/10705511.2014.950534

- check whether indicators are categorical
	- if binary, warning if testing loadings/thresholds separately

- check that it is not a lavaan.mi object, and no bootstrapping requested

- write a vignette to showcase all the functionality
	- hacking in extra information for extra() or datafun() via freeParam (when "mimic") or covariates (when "mgcfa/long")
	- using datafun to permute group/time even under a different modelType





============================
Measurement Invariance suite
============================

New Measurement Invariance suite
- empirical anchor selector
  - minimum Woods (2009), maybe Achim & Carolin's
- partial / DIF tester
  - Wald or forward LRT (requires anchors), score or backward LRT
- add aux= argument to measEq.syntax() to signal calling auxiliary()


semTools::measEq.syntax()
- Implement effects-coding constraints for thresholds
  - resolves underidentified common-factor means when indicators are ordinal
  - THIS IS A PAPER (short note or Teacher Corner in SEM?)
- add OpenMx to as.character()
- more advanced check for ordinal indicators + higher-order factor?
  https://groups.google.com/d/msg/lavaan/vgQZCbzAKRU/8UFuE-IKBwAJ
- accompanying measEq.null.syntax() function with some options:
  - Rigdon's model, Widamin & Thompson's independence model, parallel/tau-eq models


semTools::partialInvariance()
- argument for adding OR dropping (or Wald), rather than all output
- make a separate function: findAnchors(), implementing Woods (2009) or Wang & Woods (2017)
	- doi:10.1177/0146621607314044
	- see psychotools package, Kopf & Zeileis methods
	- have partialInvariance() call it to reduce number of fitted models
- utilize getMIs function instead of fitting models?
- argument to add fit indices as columns in output$results
EVENTUALLY automate post-hoc steps in measurementInvariance()
	- add attributes like "level" and "partial" for checks, show/summary
SEE R PACKAGES: dmacs


semTools::alignment()
- pass configural model for a re-fitted lavaan model that is "aligned"
- need delta, or just apply aligned latent means/variances as new fixed values?
  - check whether SEs match Mplus' delta method
  - CFA-after-alignment proposed by Marsh; just offer that?
- extend to ordinal indicators? (Mplus only allows binary items)
  - 2 steps: first align thresholds allowing LIR distributions to differ,
             then align as usual given the first alignment


Lai & Yoon's new CFI for invariance tests?
- general incremental-fit function accepts 2-3 models, returns vector of indices
  - detect robust correction
  - utilize Yves' new @h1 and @baseline slots when available
- or write a lavBaseline() function with some automated replacements for default
  - similar to lav_partable_baseline()?


==================
Missing Data suite
==================

semTools::auxiliary()
- allow fixed.x = TRUE
  - set missing = "fiml.x"
  - check for $exo, regress auxiliaries on them, correlate with endogenous
- try setting PT$user == 9 for auxiliary parameters
  - create lavaan branch, change coef(), parameterEstimates(), etc.
- add example of alternative null model to help page

semTools::twostage() edits/additions:
- now in lavaan (but without auxiliary variables)
- adapt semTools::auxiliary() to return a lavMoments object
  - let lavaan do all the work
  - return lavaan object, no need for class/methods


semTools::bsBootMiss() additions:
- allow for nested models instead of relying on saturated parent model
- remove the "write" arguments
- fix man page
- use group.label to preserve group order?
- add estimate of Monte Carlo SE as guideline for choosing nBoot
- convince Yves to include in bootstrapLavaan rewrite


semTools::plausibleValues()
- account for different factor-score matrices per missing-data pattern?
- look for `type="ymis"`, do something with model-based imputations? use lavaan.mi


==================
Interactions suite
==================

semTools::plotProbe
- Rework code to create figures in ggplot for greater customizability

new R package "modsem" automates fitting with product indicators
- does not probe interactions
- \dontrun{} example showing how its output works to probe using semTools?


======================
Miscellaneous semTools
======================

semTools::miPowerFit()
- optionally work with lavTestScore() output?
  - https://groups.google.com/d/msg/lavaan/b2mB9kHUYho/vFad-F8UDgAJ


semTools::chisqSmallN()
- new stats for nonnormal data with small N:
http://dx.doi.org/10.1080/10705511.2016.1277726
- empirical correction:
https://doi.org/10.1080/00273171.2017.1354759


semTools::net()
- allow for fixed.x or conditional.x?
- if (nclusters > 1L) test only one block (all groups)
  - default level=1L, optional level=2L
  - need to fudge the check using single-level models (MLSEM requires raw data)


New function: convert ordinal CFA parameters to IRT
- https://groups.google.com/d/msg/lavaan/RpZnNPQ3_kc/wawV4T-lAwAJ
- https://groups.google.com/d/msg/lavaan/xeG7OuYcrMc/epJp14WlAwAJ


New function: partialRsq()
- calculate proportion of variance uniquely explained by each predictor
- See SEMNET request:
    Date:    Fri, 14 Sep 2018 13:02:30 +1000
    From:    Michael Zyphur <mzyphur@GMAIL.COM>
    Subject: Software for path-analytic variance computations?
- also offer semipartialRsq()? or add semi-TRUE/FALSE option



====================
Changes to (b)lavaan
====================

How can we pass auxiliaries to lavCor for lavaan's first step in DWLS?
  - June 2024: new lavh1() function
How does lavaan allow for non-normality of continuous variables when mixed
with ordinal?  Necessary to use a robust ACOV as the weight matrix?

- add EC.RMR to modindices/lavTestScore?

- allow partially nested designs (e.g., Group 1 multilevel, Group 2 single-level)
  - https://doi.org/10.1080/00273171.2014.882253
  - need lav(List)Inspect(object, "nblocks")


lavaan::lavNames()
- type = "ov.L2" for level-2 only variables
- same with level-1 only, and for "lv.*"


lavaan::lavaanList()
- create c() method to concatenate lavaanList() objects
  - rather than starting over to get more permutations or parcel allocations
      setMethod("c", "lavaanList",
      function(x, ...) {
          dots <- list(...)
          x
      })
- copy update() method for class lavaanList


lavaan:::lav_object_inspect_vcov()
- When free parameters are constrained to zero, sometimes SEs are NA instead
  of 0.  This unfortunately omits them from use in (e.g.) summary.lavaan.mi()
    $ diag(OUT)[diag(OUT) < 0 & abs(diag(OUT)) < .Machine$double.eps] <- 0
- Would this cause problems with inversion within lavaan.mi methods?

blavaan::ppmc()
- add utils::txtProgressBar()

blavaan::blavInspect()
- add options "perc.npd" for theta and psi
  - analogous to lavaan::lavInspect(fit, "post.check")
- check det() for each iter when EAP/MAP is NPD

Add a tutorial page for common warnings that raise questions
- NPD matrices / Heywood cases
- x.idx for missing
- bivariate tables empty

http://lavaan.ugent.be/resources/related.html
- update names for semTools and simsem
- add blavaan


